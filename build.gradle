plugins {
    id 'application'
    id 'java'
    id 'org.gradlewebtools.minify' version '1.3.2'
}

application {
    mainClass = 'de.pdinklag.mcstats.cli.MinecraftStatsCLI'
}

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://oss.sonatype.org/content/repositories/central' }
}

dependencies {
    implementation 'org.json:json:20220924'
    compileOnly 'org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT'
}

task concatJs {
    inputs.files(
        'www/js/dev/mcstats.js',
        'www/js/dev/mcstats-localization.js',
        'www/js/dev/mcstats-widgets.js',
        'www/js/dev/mcstats-awardlist.js',
        'www/js/dev/mcstats-awardview.js',
        'www/js/dev/mcstats-eventlist.js',
        'www/js/dev/mcstats-eventview.js',
        'www/js/dev/mcstats-playerlist.js',
        'www/js/dev/mcstats-playerview.js',
        'www/js/dev/mcstats-hof.js',
        'www/js/dev/mcstats-loader.js',
        'www/js/dev/mcstats-start.js')
    outputs.file("build/js/mcstats.js" )
    doLast {
        outputs.files.singleFile.withOutputStream { out ->
            for (file in inputs.files) file.withInputStream { out << it << '\n' }
        }
    }
}

task minifyJs(type: org.gradlewebtools.minify.JsMinifyTask) {
    dependsOn concatJs

    srcDir = project.file('build/js')
    dstDir = project.file('build/www/js')
    options.createSourceMaps = true
    options.emitUseStrict = false
}

task minifyCss(type: org.gradlewebtools.minify.CssMinifyTask) {
    srcDir = project.file('www/css')
    dstDir = project.file('build/www')
}

task copyWww(type: Copy) {
    dependsOn minifyJs
    dependsOn minifyCss

    from('www') {
        include 'index.html'
        include 'font/*.woff2'
        include 'img/**/*.gif'
        include 'img/**/*.png'
        include 'js/lib/**'
        include 'localization/*.json'
    }
    into 'build/www'
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

def cliBaseName = 'MinecraftStatsCLI'
def pluginBaseName = 'MinecraftStatsPlugin'

def libsDir = 'build/libs'
def releaseDir = 'build/release'

task jarCli (type: Jar) {
    archiveBaseName = cliBaseName

    dependsOn compileJava
    dependsOn processResources
    manifest {
        attributes(
            'Main-Class': application.mainClass
        )
    }
    from sourceSets.main.runtimeClasspath.collect { it.getName().endsWith('.jar') ? zipTree(it) : it }
    exclude 'de/pdinklag/mcstats/bukkit'
    exclude '*.yml'
}

task jarPlugin (type: Jar) {
    archiveBaseName = pluginBaseName

    dependsOn compileJava
    dependsOn processResources
    dependsOn copyWww
    from('build') {
        include 'www/**/*'
    }
    from sourceSets.main.runtimeClasspath.collect { it.getName().endsWith('.jar') ? zipTree(it) : it }
    exclude 'de/pdinklag/mcstats/cli'
}

task distCli (type: Zip) {
    dependsOn jarCli
    from(libsDir) {
        include "${cliBaseName}.jar"
    }
    archiveBaseName = cliBaseName
    destinationDirectory = file(releaseDir)
}

task distPlugin (type: Copy) {
    dependsOn jarPlugin
    from(libsDir) {
        include "${pluginBaseName}.jar"
    }
    into releaseDir
}

task distWeb (type: Zip) {
    dependsOn copyWww
    from 'build/www/'

    archiveBaseName = 'MinecraftStatsWeb'
    destinationDirectory = file(releaseDir)
}

task release {
    dependsOn distCli
    dependsOn distPlugin
    dependsOn distWeb
}
